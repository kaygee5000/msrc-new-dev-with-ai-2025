<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class AddRtpDashboardTables extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        // Add new columns to existing right_to_play_questions table
        Schema::table('right_to_play_questions', function (Blueprint $table) {
            // Only add columns if they don't exist
            if (!Schema::hasColumn('right_to_play_questions', 'indicator_type')) {
                $table->enum('indicator_type', ['output', 'outcome'])->nullable();
            }
            if (!Schema::hasColumn('right_to_play_questions', 'question_form')) {
                $table->enum('question_form', ['school-output', 'district-output', 'consolidated-checklist', 'partners-in-play'])->nullable();
            }
            if (!Schema::hasColumn('right_to_play_questions', 'display_order')) {
                $table->integer('display_order')->default(0);
            }
            if (!Schema::hasColumn('right_to_play_questions', 'is_required')) {
                $table->boolean('is_required')->default(false);
            }
            if (!Schema::hasColumn('right_to_play_questions', 'has_file_upload')) {
                $table->boolean('has_file_upload')->default(false);
            }
            if (!Schema::hasColumn('right_to_play_questions', 'target')) {
                $table->string('target', 50)->nullable();
            }
        });

        // Create Consolidated Checklist Responses table
        Schema::create('right_to_play_consolidated_checklist_responses', function (Blueprint $table) {
            $table->id();
            $table->foreignId('itinerary_id')->constrained('right_to_play_itineraries');
            $table->foreignId('school_id')->constrained('schools');
            $table->foreignId('teacher_id')->nullable()->constrained('teachers');
            $table->foreignId('submitted_by')->constrained('users');
            $table->dateTime('submitted_at');
            $table->timestamps();
            $table->softDeletes();
        });

        // Create Consolidated Checklist Answers table
        Schema::create('right_to_play_consolidated_checklist_answers', function (Blueprint $table) {
            $table->id();
            $table->foreignId('response_id')->constrained('right_to_play_consolidated_checklist_responses')->onDelete('cascade');
            $table->foreignId('question_id')->constrained('right_to_play_questions');
            $table->text('answer_value')->nullable();
            $table->string('upload_file_path', 255)->nullable();
            $table->string('upload_file_name', 255)->nullable();
            $table->timestamps();
            
            // Add index for performance
            $table->index(['question_id', 'answer_value(20)'], 'idx_cc_answers_question');
        });

        // Create Partners in Play Responses table
        Schema::create('right_to_play_pip_responses', function (Blueprint $table) {
            $table->id();
            $table->foreignId('itinerary_id')->constrained('right_to_play_itineraries');
            $table->foreignId('school_id')->constrained('schools');
            $table->foreignId('teacher_id')->constrained('teachers');
            $table->unsignedBigInteger('class_id')->nullable(); // No foreign key constraint as table might not exist
            $table->string('subject', 255)->nullable();
            $table->decimal('friendly_tone_score', 5, 2)->nullable();
            $table->decimal('acknowledging_effort_score', 5, 2)->nullable();
            $table->decimal('pupil_participation_score', 5, 2)->nullable();
            $table->decimal('learning_environment_score', 5, 2)->nullable();
            $table->decimal('ltp_skills_score', 5, 2)->nullable();
            $table->foreignId('submitted_by')->constrained('users');
            $table->dateTime('submitted_at');
            $table->timestamps();
            $table->softDeletes();
        });

        // Create Partners in Play Answers table
        Schema::create('right_to_play_pip_answers', function (Blueprint $table) {
            $table->id();
            $table->foreignId('response_id')->constrained('right_to_play_pip_responses')->onDelete('cascade');
            $table->foreignId('question_id')->constrained('right_to_play_questions');
            $table->text('answer_value');
            $table->decimal('score', 5, 2)->nullable();
            $table->timestamps();
            
            // Add index for performance
            $table->index(['question_id', 'answer_value(20)'], 'idx_pip_answers_question');
        });

        // Create Question Scoring table for dashboard analytics
        Schema::create('right_to_play_question_scoring', function (Blueprint $table) {
            $table->id();
            $table->foreignId('question_id')->constrained('right_to_play_questions')->onDelete('cascade');
            $table->decimal('score_value', 5, 2)->nullable();
            $table->text('scoring_logic')->nullable();
            $table->string('scoring_formula', 255)->nullable();
            $table->decimal('score_min', 5, 2)->nullable();
            $table->decimal('score_max', 5, 2)->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        // Drop tables in reverse order to avoid foreign key constraint errors
        Schema::dropIfExists('right_to_play_question_scoring');
        Schema::dropIfExists('right_to_play_pip_answers');
        Schema::dropIfExists('right_to_play_pip_responses');
        Schema::dropIfExists('right_to_play_consolidated_checklist_answers');
        Schema::dropIfExists('right_to_play_consolidated_checklist_responses');

        // Remove added columns from right_to_play_questions
        Schema::table('right_to_play_questions', function (Blueprint $table) {
            $table->dropColumn([
                'indicator_type',
                'question_form',
                'display_order',
                'is_required',
                'has_file_upload',
                'target'
            ]);
        });
    }
}